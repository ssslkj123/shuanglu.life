<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Shuanglu的博客</title>
    <link>https://shuanglu.life/post/</link>
    <description>Recent content in Posts on Shuanglu的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 05 Jul 2021 18:51:40 +0800</lastBuildDate><atom:link href="https://shuanglu.life/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>20210625_harbor_retention_500错误处理</title>
      <link>https://shuanglu.life/post/20210625_harbor_retention_500%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</link>
      <pubDate>Mon, 05 Jul 2021 18:51:40 +0800</pubDate>
      
      <guid>https://shuanglu.life/post/20210625_harbor_retention_500%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86/</guid>
      <description>背景 harbor 1.9.X 升级到1.10.X之后使用项目当中的tag保留功能会有bug，无法进行镜像的删除，并且也无法删除曾经创建的保留规则。如果需要进行tag保留功能的使用，需要手动将原有的tag保留规则删除后再重新创建，即可恢复。 进入postgresql的 容器 docker exec -it harbor-db /bin/bash 连接本地数据库 psql -U postgres -d registry</description>
    </item>
    
    <item>
      <title>20200826证书转换</title>
      <link>https://shuanglu.life/post/20200826%E8%AF%81%E4%B9%A6%E8%BD%AC%E6%8D%A2/</link>
      <pubDate>Mon, 05 Jul 2021 17:33:46 +0800</pubDate>
      
      <guid>https://shuanglu.life/post/20200826%E8%AF%81%E4%B9%A6%E8%BD%AC%E6%8D%A2/</guid>
      <description>前言： Windows 当中通常证书所使用的格式是pfx证书，pfx证书通常会附带公钥与私钥.即有Public key Cryptography Standards #12 ，PKCS#12来进行了标准定义，包涵公钥与私钥的二进制证书形式，其结尾通常为pfx 或 p12而cer或者Base64是只包涵二进制编码的证书，且只会包涵公钥。且文件以cer作为结</description>
    </item>
    
    <item>
      <title>20201208_nginx缓冲区参数配置优化</title>
      <link>https://shuanglu.life/post/20201208_nginx%E7%BC%93%E5%86%B2%E5%8C%BA%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96/</link>
      <pubDate>Mon, 05 Jul 2021 14:25:25 +0800</pubDate>
      
      <guid>https://shuanglu.life/post/20201208_nginx%E7%BC%93%E5%86%B2%E5%8C%BA%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE%E4%BC%98%E5%8C%96/</guid>
      <description>nginx缓冲区优化 关于缓冲, 主要是合理设置缓冲区大小, 尽量避免缓冲到硬盘时的情况 proxy_buffering proxy_buffering这个参数用来控制是否打开后端响应内容的缓冲区，如果这个设置为off，那么proxy_buffers和proxy_busy_buffers_size这两个指令将会失效。</description>
    </item>
    
  </channel>
</rss>
